{:paths ["script"]
 :deps {org.clojure/data.zip {:mvn/version "1.0.0"}
        io.aviso/pretty {:mvn/version "0.1.36"}
        docopt/docopt {:git/url "https://github.com/nubank/docopt.clj"
                       :sha "98814f559d2e50fdf10f43cbe3b7da0ca3cca423"}
        doric/doric {:mvn/version "0.9.0"}
        version-clj/version-clj {:mvn/version "0.1.2"}}
 :tasks {:lint
         [main lint]

         :import-vars
         {:description "[gencode|check]"
          :task [main apply-import-vars check]}

         :test/clj
         {:description "[<args>]"
          :task [main clj-tests]}

         :test/clj-watch
         {:description "[<kaocha args>]"
          :task [main clj-watch]}

         :test/cljs
         {:description "[<args>] - run tests under ClojureScript"
          :task [main cljs-tests]}

         :test/cljs-shadow
         {:description "run unit tests under shadow cljs"
          :task [main shadow-cljs-test]}

         :test/cljs-watch
         {:description "watch cljs tests with figwheel main"
          :task [main cljs-watch]}

         :test/coverage
         {:description "generate code coverage reports for Clojure tests"
          :task [main coverage]}

         :test/doc
         {:description "test doc code blocks"
          :task [main doc-tests]}

         :test/libs
         {:description "[run|outdated] - verify that libs using rewrite-clj* work with current rewrite-clj"
          :task [main libs-tests]}

         :outdated
         {:description "report on outdated Clojure and npm dependencies"
          :task [main outdated]}

         :test/native
         {:description "run rewrite-clj and tests after compiled to GraalVM native image"
          :task [main pure-native-test]}

         :test/native-sci
         {:description "interpret rewrite-clj tests via sci on a rewrite-clj native image"
          :task [main sci-native-test]}

         :test/native-sci-sanity
         {:description "JVM only sanity test for :test/native-sci"
          :task [main sci-jvm-test]}

         :doc/api-diffs
         {:description "generate diff docs for rewrite-clj* APIs"
          :task [main gen-api-diffs]}

         :doc/cljdoc
         {:description "<args> - preview what docs will look like on cljdoc"
          :task [main cljdoc-preview]}

         :doc/update-readme
         {:description "honor our contributors in the README"
          :task [main update-readme]}

         :ci/unit-tests
         [:main ci-tests]

         :ci/release
         {:description "<args>"
          :task [main release]}}}

